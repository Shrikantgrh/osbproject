<xsl:stylesheet version="1.0" exclude-result-prefixes="xsi oracle-xsl-mapper xsl xsd ns0 tns xp20 oraxsl mhdr oraext dvm xref socket" xmlns:java="http://www.oracle.com/XSL/Transform/java/java.lang.String" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://www.cdisc.org/ns/odm/v1.3" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator" xmlns:ns0="http://soa.incresearch.com/Rave/STS" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:client="http://xmlns.oracle.com/RaveSTSPOC/DemoStudyTFM/DemoStudyBPELProcess" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://soa.incresearch.com/Rave/URL" xmlns:mdsol="http://www.mdsol.com/ns/odm/metadata" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:fn="http://www.w3.org/2005/xpath-functions">
  <!-- xmlns:java="http://www.oracle.com/XSL/Transform/java/java.lang.String" -->
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="../Schemas/RaveSTS.xsd"/>
        <oracle-xsl-mapper:rootElement name="Subject" namespace="http://soa.incresearch.com/Rave/STS"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="XSD">
        <oracle-xsl-mapper:schema location="../Schemas/RaveODM.xsd"/>
        <oracle-xsl-mapper:rootElement name="ODM" namespace="http://www.cdisc.org/ns/odm/v1.3"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [WED Jun 03 01:28:27 EDT 2018].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <tns:ODM FileType="Transactional" FileOID="{/ns0:Subject/tns:ODM/@FileOID}" CreationDateTime="{/ns0:Subject/tns:ODM/@CreationDateTime}" ODMVersion="{/ns0:Subject/tns:ODM/@ODMVersion}">
      <xsl:for-each select="/ns0:Subject/tns:ODM/tns:ClinicalData">
        <xsl:if test="tns:SubjectData/tns:StudyEventData/@StudyEventOID = &quot;ASCREEN&quot;          and tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID =&quot;DM&quot; or          tns:SubjectData/tns:StudyEventData/@StudyEventOID = &quot;EOS&quot; and          tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID = &quot;EXIT&quot; or          tns:SubjectData/tns:StudyEventData/@StudyEventOID = &quot;LTEDOSE1&quot; and          tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID = &quot;EX_DIS&quot; or          tns:SubjectData/tns:StudyEventData/@StudyEventOID = &quot;LTEDOSE2&quot; and          tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID = &quot;EX_DIS&quot; or                                tns:SubjectData/tns:StudyEventData/@StudyEventOID = &quot;SUBJECT&quot; and          tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID = &quot;SUBJINFO&quot; or         tns:SubjectData/tns:StudyEventData/@StudyEventOID = &quot;BASE&quot; and          tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID = &quot;VS&quot;">
          <!-- above added all forms and folders conditions as per spec to this condition so that this doesn't create unnecessary clinical data -->
          <tns:ClinicalData MetaDataVersionOID="{@MetaDataVersionOID}" StudyOID="{/ns0:Subject/ns1:RaveUrls/ns1:RaveUrl[@utype='TARGET']/ns1:studyName}">
            <tns:SubjectData TransactionType="Update">
              <xsl:attribute name="SubjectKey">
                <xsl:value-of select="tns:SubjectData/@SubjectKey"/>
              </xsl:attribute>
              <tns:SiteRef LocationOID="{/ns0:Subject/ns0:Details/ns0:targetLocationOID}"/>
              <!-- for SUBJINFO -->
              <xsl:if test="(tns:SubjectData/tns:StudyEventData/@StudyEventOID = 'SUBJECT') and                (tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID='SUBJINFO')">
                <tns:StudyEventData>
                  <xsl:if test="tns:SubjectData/tns:StudyEventData/@StudyEventRepeatKey">
                    <xsl:attribute name="StudyEventRepeatKey">
                      <xsl:value-of select="tns:SubjectData/tns:StudyEventData/@StudyEventRepeatKey"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="tns:SubjectData/tns:StudyEventData/@TransactionType">
                    <xsl:attribute name="TransactionType">
                      <xsl:value-of select="tns:SubjectData/tns:StudyEventData/@TransactionType"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="not(tns:SubjectData/tns:StudyEventData/@TransactionType)">
                    <xsl:attribute name="TransactionType">Update</xsl:attribute>
                  </xsl:if>
                  <xsl:if test="tns:SubjectData/tns:StudyEventData/@StudyEventOID">
                    <xsl:attribute name="StudyEventOID">
                      <xsl:value-of select="tns:SubjectData/tns:StudyEventData/@StudyEventOID"/>
                    </xsl:attribute>
                  </xsl:if>
                  <tns:FormData>
                    <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID">
                      <xsl:attribute name="FormOID">
                        <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID"/>
                      </xsl:attribute>
                    </xsl:if>
                    <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/@FormRepeatKey">
                      <xsl:attribute name="FormRepeatKey">
                        <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/@FormRepeatKey"/>
                      </xsl:attribute>
                    </xsl:if>
                    <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/@TransactionType">
                      <xsl:attribute name="TransactionType">
                        <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/@TransactionType"/>
                      </xsl:attribute>
                    </xsl:if>
                    <xsl:if test="not(tns:SubjectData/tns:StudyEventData/tns:FormData/@TransactionType)">
                      <xsl:attribute name="TransactionType">Update</xsl:attribute>
                    </xsl:if>
                    <tns:ItemGroupData>
                      <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupOID">
                        <xsl:attribute name="ItemGroupOID">
                          <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupOID"/>
                        </xsl:attribute>
                      </xsl:if>
                      <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupRepeatKey">
                        <xsl:attribute name="ItemGroupRepeatKey">
                          <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupRepeatKey"/>
                        </xsl:attribute>
                      </xsl:if>
                      <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@TransactionType">
                        <xsl:attribute name="TransactionType">
                          <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@TransactionType"/>
                        </xsl:attribute>
                      </xsl:if>
                      <xsl:if test="not(tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@TransactionType)">
                        <xsl:attribute name="TransactionType">Update</xsl:attribute>
                      </xsl:if>
                      <xsl:for-each select="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/tns:ItemData">
                        <xsl:if test="@ItemOID = &quot;SUBJINFO.SUBJID&quot;">
                          <tns:ItemData mdsol:Lock="AsFound" ItemOID="SUBJINFO.PATNO">
                            <xsl:if test="@Value">
                              <xsl:attribute name="Value">
                                <xsl:value-of select="substring(@Value,string-length(@Value)-7)"/>
                              </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="@IsNull">
                              <xsl:attribute name="IsNull">
                                <xsl:value-of select="@IsNull"/>
                              </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="@TransactionType">
                              <xsl:attribute name="TransactionType">
                                <xsl:value-of select="@TransactionType"/>
                              </xsl:attribute>
                            </xsl:if>
                          </tns:ItemData>
                          <tns:ItemData mdsol:Lock="AsFound" ItemOID="SUBJINFO.SUBJID1">
                            <xsl:if test="@Value">
                              <xsl:attribute name="Value">
                                <xsl:value-of select="@Value"/>
                              </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="@IsNull">
                              <xsl:attribute name="IsNull">
                                <xsl:value-of select="@IsNull"/>
                              </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="@TransactionType">
                              <xsl:attribute name="TransactionType">
                                <xsl:value-of select="@TransactionType"/>
                              </xsl:attribute>
                            </xsl:if>
                          </tns:ItemData>
                          <tns:ItemData mdsol:Lock="AsFound" ItemOID="SUBJINFO.PSPNUM" Value="203065"/>
                          <tns:ItemData mdsol:Lock="AsFound" ItemOID="SUBJINFO.PRVSUBID" Value=""/>
                        </xsl:if>
                      </xsl:for-each>
                    </tns:ItemGroupData>
                  </tns:FormData>
                </tns:StudyEventData>
              </xsl:if>
              <!--ASCREEN and DM-->
              <xsl:if test="(tns:SubjectData/tns:StudyEventData/@StudyEventOID = 'ASCREEN')and                (tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID='DM')">
                <tns:StudyEventData StudyEventOID="ASCREEN">
                  <xsl:if test="tns:SubjectData/tns:StudyEventData/@StudyEventRepeatKey">
                    <xsl:attribute name="StudyEventRepeatKey">
                      <xsl:value-of select="tns:SubjectData/tns:StudyEventData/@StudyEventRepeatKey"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="tns:SubjectData/tns:StudyEventData/@TransactionType">
                    <xsl:attribute name="TransactionType">
                      <xsl:value-of select="tns:SubjectData/tns:StudyEventData/@TransactionType"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="not(tns:SubjectData/tns:StudyEventData/@TransactionType)">
                    <xsl:attribute name="TransactionType">Update</xsl:attribute>
                  </xsl:if>
                  <tns:FormData>
                    <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID">
                      <xsl:attribute name="FormOID">
                        <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID"/>
                      </xsl:attribute>
                    </xsl:if>
                    <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID"/>
                    <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/@FormRepeatKey">
                      <xsl:attribute name="FormRepeatKey">
                        <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/@FormRepeatKey"/>
                      </xsl:attribute>
                    </xsl:if>
                    <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/@TransactionType">
                      <xsl:attribute name="TransactionType">
                        <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/@TransactionType"/>
                      </xsl:attribute>
                    </xsl:if>
                    <xsl:if test="not(tns:SubjectData/tns:StudyEventData/tns:FormData/@TransactionType)">
                      <xsl:attribute name="TransactionType">Update</xsl:attribute>
                    </xsl:if>
                    <tns:ItemGroupData>
                      <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupOID">
                        <xsl:attribute name="ItemGroupOID">
                          <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupOID"/>
                        </xsl:attribute>
                      </xsl:if>
                      <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupRepeatKey">
                        <xsl:attribute name="ItemGroupRepeatKey">
                          <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupRepeatKey"/>
                        </xsl:attribute>
                      </xsl:if>
                      <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@TransactionType">
                        <xsl:attribute name="TransactionType">
                          <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@TransactionType"/>
                        </xsl:attribute>
                      </xsl:if>
                      <xsl:if test="not(tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@TransactionType)">
                        <xsl:attribute name="TransactionType">Update</xsl:attribute>
                      </xsl:if>
                      <xsl:for-each select="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/tns:ItemData">
                        <xsl:choose>
                          <xsl:when test="((@ItemOID = 'DM.ETHNIC') or (@ItemOID = 'DM.WHT') or (@ItemOID = 'DM.BORAA') or (@ItemOID = 'DM.ASIAN') or (@ItemOID = 'DM.NHOPI')or (@ItemOID = 'DM.AIAN')or (@ItemOID = 'DM.OTHER')or (@ItemOID = 'DM.RACEOTH'))">
                            <xsl:if test="//*[local-name()='ItemData'][@ItemOID='DM.COUNTRY']/@Value !='FRA'">
                              <tns:ItemData mdsol:Lock="AsFound">
                                <xsl:if test="@ItemOID">
                                  <xsl:attribute name="ItemOID">
                                    <xsl:value-of select="@ItemOID"/>
                                  </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="@Value">
                                  <xsl:attribute name="Value">
                                    <xsl:value-of select="@Value"/>
                                  </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="@IsNull">
                                  <xsl:attribute name="IsNull">
                                    <xsl:value-of select="@IsNull"/>
                                  </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="@TransactionType">
                                  <xsl:attribute name="TransactionType">
                                    <xsl:value-of select="@TransactionType"/>
                                  </xsl:attribute>
                                </xsl:if>
                                <xsl:value-of select="."/>
                              </tns:ItemData>
                            </xsl:if>
                          </xsl:when>
                          <xsl:when test="(@ItemOID = 'DM.SEX')">
                            <tns:ItemData mdsol:Lock="AsFound">
                              <xsl:if test="@ItemOID">
                                <xsl:attribute name="ItemOID">
                                  <xsl:value-of select="@ItemOID"/>
                                </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="@Value">
                                <xsl:attribute name="Value">
                                  <xsl:value-of select="@Value"/>
                                </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="@IsNull">
                                <xsl:attribute name="IsNull">
                                  <xsl:value-of select="@IsNull"/>
                                </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="@TransactionType">
                                <xsl:attribute name="TransactionType">
                                  <xsl:value-of select="@TransactionType"/>
                                </xsl:attribute>
                              </xsl:if>
                              <xsl:value-of select="."/>
                            </tns:ItemData>
                          </xsl:when>
                          <xsl:when test="(@ItemOID = 'DM.BRTHDAT')">
                            <tns:ItemData mdsol:Lock="AsFound">
                              <xsl:if test="@ItemOID">
                                <xsl:attribute name="ItemOID">
                                  <xsl:value-of select="@ItemOID"/>
                                </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="@Value">
                                <xsl:attribute name="Value">
                                  <xsl:value-of select="substring(@Value,string-length(@Value)-3)"/>
                                </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="@IsNull">
                                <xsl:attribute name="IsNull">
                                  <xsl:value-of select="@IsNull"/>
                                </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="@TransactionType">
                                <xsl:attribute name="TransactionType">
                                  <xsl:value-of select="@TransactionType"/>
                                </xsl:attribute>
                              </xsl:if>
                              <xsl:value-of select="."/>
                            </tns:ItemData>
                          </xsl:when>
                        </xsl:choose>
                      </xsl:for-each>
                    </tns:ItemGroupData>
                  </tns:FormData>
                </tns:StudyEventData>
              </xsl:if>
              <!--EOS and EXIT-->
              <xsl:if test="(tns:SubjectData/tns:StudyEventData/@StudyEventOID = 'EOS')and                (tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID='EXIT')">
                <tns:StudyEventData StudyEventOID="SUBJECT">
                  <xsl:if test="tns:SubjectData/tns:StudyEventData/@StudyEventRepeatKey">
                    <xsl:attribute name="StudyEventRepeatKey">
                      <xsl:value-of select="tns:SubjectData/tns:StudyEventData/@StudyEventRepeatKey"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:attribute name="TransactionType">Update</xsl:attribute>
                  <tns:FormData FormOID="SDTSINTG" TransactionType="Update">
                    <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/@FormRepeatKey">
                      <xsl:attribute name="FormRepeatKey">
                        <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/@FormRepeatKey"/>
                      </xsl:attribute>
                    </xsl:if>
                    <tns:ItemGroupData ItemGroupOID="{java:replaceAll(tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupOID,'EXIT','SDTSINTG')}" TransactionType="Update">
                      <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupRepeatKey">
                        <xsl:attribute name="ItemGroupRepeatKey">
                          <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupRepeatKey"/>
                        </xsl:attribute>
                      </xsl:if>
                      <xsl:for-each select="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/tns:ItemData">
                        <xsl:choose>
                          <xsl:when test="(@ItemOID = 'EXIT.LSDOSDAT2')">
                            <tns:ItemData mdsol:Lock="AsFound" ItemOID="SDTSINTG.PLDOSDAT1">
                              <xsl:if test="@Value">
                                <xsl:attribute name="Value">
                                  <xsl:value-of select="@Value"/>
                                </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="@IsNull">
                                <xsl:attribute name="IsNull">
                                  <xsl:value-of select="@IsNull"/>
                                </xsl:attribute>
                              </xsl:if>
                            </tns:ItemData>
                          </xsl:when>
                        </xsl:choose>
                      </xsl:for-each>
                    </tns:ItemGroupData>
                  </tns:FormData>
                </tns:StudyEventData>
              </xsl:if>
              <!--LTEDOSE1 and EX_DIS-->
              <xsl:if test="((tns:SubjectData/tns:StudyEventData/@StudyEventOID = 'LTEDOSE1')and                (tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID='EX_DIS')or                (tns:SubjectData/tns:StudyEventData/@StudyEventOID = 'LTEDOSE2')and                (tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID='EX_DIS'))">
                <tns:StudyEventData StudyEventOID="SUBJECT">
                  <xsl:if test="tns:SubjectData/tns:StudyEventData/@StudyEventRepeatKey">
                    <xsl:attribute name="StudyEventRepeatKey">
                      <xsl:value-of select="tns:SubjectData/tns:StudyEventData/@StudyEventRepeatKey"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="tns:SubjectData/tns:StudyEventData/@TransactionType">
                    <xsl:attribute name="TransactionType">
                      <xsl:value-of select="tns:SubjectData/tns:StudyEventData/@TransactionType"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:if test="not(tns:SubjectData/tns:StudyEventData/@TransactionType)">
                    <xsl:attribute name="TransactionType">Update</xsl:attribute>
                  </xsl:if>
                  <tns:FormData>
                    <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID">
                      <xsl:attribute name="FormOID">SDTSINTG</xsl:attribute>
                    </xsl:if>
                    <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/@FormRepeatKey">
                      <xsl:attribute name="FormRepeatKey">
                        <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/@FormRepeatKey"/>
                      </xsl:attribute>
                    </xsl:if>
                    <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/@TransactionType">
                      <xsl:attribute name="TransactionType">
                        <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/@TransactionType"/>
                      </xsl:attribute>
                    </xsl:if>
                    <xsl:if test="not(tns:SubjectData/tns:StudyEventData/tns:FormData/@TransactionType)">
                      <xsl:attribute name="TransactionType">Update</xsl:attribute>
                    </xsl:if>
                    <tns:ItemGroupData>
                      <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupOID">
                        <xsl:attribute name="ItemGroupOID">
                          <xsl:value-of select="java:replaceAll(tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupOID,'EX_DIS','SDTSINTG')"/>
                        </xsl:attribute>
                      </xsl:if>
                      <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupRepeatKey">
                        <xsl:attribute name="ItemGroupRepeatKey">
                          <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupRepeatKey"/>
                        </xsl:attribute>
                      </xsl:if>
                      <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@TransactionType">
                        <xsl:attribute name="TransactionType">
                          <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@TransactionType"/>
                        </xsl:attribute>
                      </xsl:if>
                      <xsl:if test="not(tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@TransactionType)">
                        <xsl:attribute name="TransactionType">Update</xsl:attribute>
                      </xsl:if>
                      <xsl:for-each select="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/tns:ItemData">
                        <xsl:choose>
                          <xsl:when test="(@ItemOID = 'EX_DIS.KITPLAC')">
                            <tns:ItemData mdsol:Lock="AsFound">
                              <xsl:if test="@ItemOID">
                                <xsl:attribute name="ItemOID">
                                  <xsl:value-of select="concat(java:replaceAll(@ItemOID,'EX_DIS','SDTSINTG'),'1')"/>
                                </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="@Value">
                                <xsl:attribute name="Value">
                                  <xsl:value-of select="@Value"/>
                                </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="@IsNull">
                                <xsl:attribute name="IsNull">
                                  <xsl:value-of select="@IsNull"/>
                                </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="@TransactionType">
                                <xsl:attribute name="TransactionType">
                                  <xsl:value-of select="@TransactionType"/>
                                </xsl:attribute>
                              </xsl:if>
                              <xsl:value-of select="."/>
                            </tns:ItemData>
                          </xsl:when>
                          <xsl:when test="(@ItemOID = 'EX_DIS.ITEMS') or (@ItemOID = 'EX_DIS.VACKTNM') or (@ItemOID = 'EX_DIS.REASKITR')">
                            <xsl:if test="(@Value) and (@Value!='')">
                              <tns:ItemData mdsol:Lock="AsFound">
                                <xsl:if test="@ItemOID">
                                  <xsl:attribute name="ItemOID">
                                    <xsl:value-of select="concat(java:replaceAll(@ItemOID,'EX_DIS','SDTSINTG'),'1')"/>
                                  </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="@Value">
                                  <xsl:attribute name="Value">
                                    <xsl:value-of select="@Value"/>
                                  </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="@IsNull">
                                  <xsl:attribute name="IsNull">
                                    <xsl:value-of select="@IsNull"/>
                                  </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="@TransactionType">
                                  <xsl:attribute name="TransactionType">
                                    <xsl:value-of select="@TransactionType"/>
                                  </xsl:attribute>
                                </xsl:if>
                              </tns:ItemData>
                            </xsl:if>
                          </xsl:when>
                        </xsl:choose>
                      </xsl:for-each>
                    </tns:ItemGroupData>
                  </tns:FormData>
                </tns:StudyEventData>
              </xsl:if>
              <!-- BASE and VS -->
              <xsl:if test="(tns:SubjectData/tns:StudyEventData/@StudyEventOID = 'BASE')and                (tns:SubjectData/tns:StudyEventData/tns:FormData/@FormOID='VS')">
                <tns:StudyEventData StudyEventOID="SUBJECT">
                  <xsl:if test="tns:SubjectData/tns:StudyEventData/@StudyEventRepeatKey">
                    <xsl:attribute name="StudyEventRepeatKey">
                      <xsl:value-of select="tns:SubjectData/tns:StudyEventData/@StudyEventRepeatKey"/>
                    </xsl:attribute>
                  </xsl:if>
                  <xsl:attribute name="TransactionType">Update</xsl:attribute>
                  <tns:FormData FormOID="SDTSINTG" TransactionType="Update">
                    <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/@FormRepeatKey">
                      <xsl:attribute name="FormRepeatKey">
                        <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/@FormRepeatKey"/>
                      </xsl:attribute>
                    </xsl:if>
                    <tns:ItemGroupData TransactionType="Update">
                      <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupRepeatKey">
                        <xsl:attribute name="ItemGroupRepeatKey">
                          <xsl:value-of select="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupRepeatKey"/>
                        </xsl:attribute>
                      </xsl:if>
                      <xsl:if test="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupOID">
                        <xsl:attribute name="ItemGroupOID">
                          <xsl:value-of select="java:replaceAll(tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/@ItemGroupOID,'VS','SDTSINTG')"/>
                        </xsl:attribute>
                      </xsl:if>
                      <xsl:for-each select="tns:SubjectData/tns:StudyEventData/tns:FormData/tns:ItemGroupData/tns:ItemData">
                        <xsl:choose>
                          <xsl:when test="(@ItemOID = 'VS.WEIGHT') or (@ItemOID = 'VS.WTUNIT')">
                            <tns:ItemData mdsol:Lock="AsFound">
                              <xsl:if test="@ItemOID">
                                <xsl:choose>
                                  <xsl:when test="(@ItemOID = 'VS.WEIGHT')">
                                    <xsl:attribute name="ItemOID">SDTSINTG.WT_BASE1</xsl:attribute>
                                  </xsl:when>
                                </xsl:choose>
                                <xsl:choose>
                                  <xsl:when test="(@ItemOID = 'VS.WTUNIT')">
                                    <xsl:attribute name="ItemOID">SDTSINTG.WTU_BASE1</xsl:attribute>
                                  </xsl:when>
                                </xsl:choose>
                              </xsl:if>
                              <xsl:if test="@Value">
                                <xsl:attribute name="Value">
                                  <xsl:value-of select="@Value"/>
                                </xsl:attribute>
                              </xsl:if>
                              <xsl:if test="@IsNull">
                                <xsl:attribute name="IsNull">
                                  <xsl:value-of select="@IsNull"/>
                                </xsl:attribute>
                              </xsl:if>
                            </tns:ItemData>
                          </xsl:when>
                        </xsl:choose>
                      </xsl:for-each>
                    </tns:ItemGroupData>
                  </tns:FormData>
                </tns:StudyEventData>
              </xsl:if>
            </tns:SubjectData>
          </tns:ClinicalData>
        </xsl:if>
      </xsl:for-each>
    </tns:ODM>
  </xsl:template>
</xsl:stylesheet>